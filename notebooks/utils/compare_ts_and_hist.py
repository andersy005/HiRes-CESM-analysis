#!/usr/bin/env python
"""
A script to verify that converting from history files to time series worked as expected
"""

from .CaseClass import CaseClass


def compare_ts_and_hist(casename, varname, stream, year, isel_kwargs):
    """
    Generate two CaseClass objects from the same casename, one
    from time series output and the other from history files.

    Compare the datasets generated by these two objects; they
    should be identical. Possible error states:

    1. can not find time series {stream} from {year} for {varname}
    2. can not find history files {stream} from {year} for {varname}
    3. datasets differ
    """
    case_ts = CaseClass(casename)
    case_hist = CaseClass(casename)
    case_hist._timeseries_filenames[stream] = []

    # (1) generate datasets
    #     (a) time series
    try:
        ds_ts = case_ts.gen_dataset(
            varname, stream, start_year=year, end_year=year, quiet=True
        )
    except ValueError:
        return "Can not generate time series dataset"

    #     (b) history files
    try:
        ds_hist = case_hist.gen_dataset(
            varname, stream, start_year=year, end_year=year, quiet=True
        )
    except ValueError:
        return "History files unavailable"

    # (2) Check sources of data being read
    #     (a) case_ts should return data from time series
    data_source = case_ts.get_dataset_source(stream, year, varname)
    if data_source != "time series":
        return "case_ts does not provide time series files"

    #     (b) case_ts should return data from history files
    #         note: this condition should never be met, as it will be
    #               caught in (1b)
    data_source = case_hist.get_dataset_source(stream, year, varname)
    if data_source != "hist":
        return "case_hist does not provide history files"

    # (3) Compare datasets
    da_hist = ds_hist[varname].isel(**isel_kwargs)
    da_ts = ds_ts[varname].isel(**isel_kwargs)
    if not da_hist.identical(da_ts):
        return "datasets differ"

    return "same"


########################

if __name__ == "__main__":
    print("Feature not implemented yet")
